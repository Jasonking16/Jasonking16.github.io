import numpy as np
from scipy import stats
import matplotlib.cm as cm
from matplotlib import pyplot as plt;

train_noised = np.genfromtxt('train_noised.csv',delimiter=',',skip_header=1)
train_noised = train_noised.transpose()
train_noised = train_noised[1:].transpose()
train_clean = np.genfromtxt('train_clean.csv',delimiter=',',skip_header=1)
train_clean = train_clean.transpose()
train_clean = train_clean[1:].transpose()
test_noised = np.genfromtxt('test_noised.csv',delimiter=',',skip_header=1)
test_noised = test_noised.transpose()
test_noised = test_noised[1:].transpose()

def get_patches(X):
    m,n = X.shape
    X = np.pad(X, ((2, 2), (2, 2)), 'constant')
    patches = np.zeros((m*n, 25))
    for i in range(m):
        for j in range(n):
            patches[i*n+j] = X[i:i+5,j:j+5].reshape(25)
    return patches

trainx = get_patches(train_noised)
trainy = train_clean.reshape((392000,1))
testx = get_patches(test_noised)

slope, intercept, r_value, p_value, std_err = stats.linregress(trainx,trainy)

#regr = linear_model.LinearRegression()
regr.fit(x,y)
result = regr.predict(testx)
result = (result>0)*result

import csv
with open('some.csv', 'wb') as f:
    writer = csv.writer(f)
    writer.writerows(result)
#plt.imshow(a,interpolation="nearest", cmap=cm.Greys_r)



#plot
import numpy as np
from matplotlib import pyplot as plt
x=np.linspace(1,50,50)
y1=np.zeros((50,1));y2=np.zeros((50,1));
y3=np.zeros((50,1));y4=np.zeros((50,1));
for i in range(10):
    y1[i]=0.153-(0.153-0.062)*i**(0.5)/3
    y2[i]=0.15-(0.15-0.06)*i**(0.5)/3
    y3[i]=0.138-(0.138-0.058)*i**(0.5)/3
    y4[i]=0.122-(0.122-0.051)*i**(0.5)/3
for i in range(40):
    y1[i+10]=y1[9]-0.001/(i+1)**0.5
    y2[i+10]=y2[9]-0.001/(i+1)**0.5
    y3[i+10]=y3[9]-0.001/(i+1)**0.5
    y4[i+10]=y4[8]-0.001/(i+1)**0.5
y4[9]=y4[10]
plt.plot(x,y1);plt.plot(x,y2);
plt.plot(x,y3);plt.plot(x,y4);


